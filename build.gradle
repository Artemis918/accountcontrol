/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'balsen' at '7/7/17 12:08 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */



plugins {
  id "java"
  id "eclipse" 
  id "org.springframework.boot" version "3.2.3"
  id "io.spring.dependency-management" version "1.1.4"
  id "com.github.node-gradle.node" version "7.0.2"
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.liquibase:liquibase-core:4.26.0'
    implementation 'org.postgresql:postgresql'
    implementation 'com.opencsv:opencsv:5.9'
    implementation 'org.jdom:jdom2:2.0.5'
    implementation 'com.google.code.gson:gson:2.10.1'

    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.10.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-suite:1.10.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-suite-api:1.10.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-commons:1.10.2'
    testImplementation 'com.h2database:h2:2.2.224'   
}

test {
    systemProperty 'spring.profiles.active', 'test'
    useJUnitPlatform()
}

node {
  distBaseUrl = 'https://nodejs.org/dist'
  download = true
}

task webpack(type: NodeTask, dependsOn: 'npmInstall') {
	script = project.file('node_modules/.bin/webpack')
}

processResources.dependsOn 'webpack'

processResources {
  with copySpec {
      from "${buildDir}/js"
      include "**/*.js"
      into "static"
  }
}

clean.delete << file('src/main/webapp/dist')

task copyDockerJar(type: Copy) {
	dependsOn "Jar"
    from "$buildDir/libs/accountcontrol.jar"
    into "$buildDir/docker"
}

task copyDocker(type: Copy) {
	dependsOn "copyDockerJar"
    from "$projectDir/docker"
    into "$buildDir/docker"
}

// createContainer {
//   #dependsOn "build"
//   #cp build/libs/accountcontrol.jar docker
//   #docker build -t gitlab.balsen.loc:4901/balsen/accountcontrol/accountcontrol:latest docker
//   #docker push gitlab.balsen.loc:4901/balsen/accountcontrol/accountcontrol:latest
// }
